// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // 确认加载地址
    // 确定是加载 RAM 地址
    Not(in=address[14], out=memoryAddr);
    // 这个目前只是当 address >= 0x6000 的时候，就会置 keyAddr 为 true
    // 是否要条件改为，严格确认只有当 address == 0x6000
    And(a=address[14], b=address[13], out=keyAddr);
    Not(in=address[13], out=notKey);
    And(a=address[14], b=notKey, out=screenAddr);

    // 确认 load 哪一部分内存位置
    And(a=load, b=keyAddr, out=loadKey);
    And(a=load, b=memoryAddr, out=loadMemory);
    And(a=load, b=screenAddr, out=loadScreen);

    // 获取输出
    RAM16K(in=in, load=loadMemory, address=address[0..13], out=outMemory);
    Screen(in=in, load=loadScreen, address=address[0..12], out=outScreen);
    Keyboard(out=outKeyboard);
    Mux16(a=outKeyboard, b=outScreen, sel=screenAddr, out=outIO);
    Mux16(a=outIO, b=outMemory, sel=memoryAddr, out=out);
}